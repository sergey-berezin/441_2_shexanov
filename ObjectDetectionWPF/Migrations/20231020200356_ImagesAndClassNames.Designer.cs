// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ObjectDetectionWPF.ViewModel.Data;

#nullable disable

namespace ObjectDetectionWPF.Migrations
{
    [DbContext(typeof(ProcessedImagesDBContext))]
    [Migration("20231020200356_ImagesAndClassNames")]
    partial class ImagesAndClassNames
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ObjectDetectionWPF.ViewModel.Data.ClassName", b =>
                {
                    b.Property<long>("ImageId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<long>("Count")
                        .HasColumnType("bigint");

                    b.HasKey("ImageId", "Name");

                    b.ToTable("ClassNames");
                });

            modelBuilder.Entity("ObjectDetectionWPF.ViewModel.Data.Images", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<byte[]>("ImageWithObjects")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<byte[]>("LoadedImage")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("ObjectDetectionWPF.ViewModel.Data.ClassName", b =>
                {
                    b.HasOne("ObjectDetectionWPF.ViewModel.Data.Images", "Images")
                        .WithMany("ClassNames")
                        .HasForeignKey("ImageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Images");
                });

            modelBuilder.Entity("ObjectDetectionWPF.ViewModel.Data.Images", b =>
                {
                    b.Navigation("ClassNames");
                });
#pragma warning restore 612, 618
        }
    }
}
